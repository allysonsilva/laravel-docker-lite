[opcache]
zend_extension=opcache.so

; OPcache On/Off switch. When set to Off, code is not optimized.
opcache.enable=1

; Enables the OPcache for the CLI version of PHP.
opcache.enable_cli=1

; The amount of memory for storing precompiled PHP code in Mbytes.
opcache.memory_consumption=256

; The amount of memory used to store interned strings, in megabytes.
opcache.interned_strings_buffer=32

; The maximum number of keys (and therefore scripts) in the OPcache hash table.
opcache.max_accelerated_files=32531

; The maximum percentage of wasted memory that is allowed before a restart is scheduled.
opcache.max_wasted_percentage=10

; If enabled, OPcache will check for updated scripts every opcache.revalidate_freq seconds.
;
; For Development / testing, keep 1
; For performance / production, keep 0
opcache.validate_timestamps=0

; opcache.revalidate_freq How often in seconds should the code cache expire and check if your code has changed.
; 0 means it checks your PHP code every single request IF YOU HAVE opcache.validate_timestamps ENABLED.
opcache.revalidate_freq=0

; If disabled, all documentation comments will be discarded from the opcode cache to reduce the size
; of the optimised code.
opcache.save_comments=1

; The maximum file size that will be cached, in bytes. If this is 0, all files will be cached.
opcache.max_file_size=0

; If non-zero, OPcache will verify the cache checksum every N requests, where N is the value of this
; configuration directive. This should only be enabled when debugging, as it will impair performance.
opcache.consistency_checks=0

; Prevents caching files that are less than this number of seconds old. It protects from caching of incompletely
; updated files. In case all file updates on your site are atomic, you may increase performance by setting it to "0".
opcache.file_update_protection=0

; Enables or disables opcode caching in shared memory.
opcache.file_cache_only=0

; Enables or disables checksum validation when script loaded from file cache.
opcache.file_cache_consistency_checks=1
