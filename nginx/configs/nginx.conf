# Defines user and group credentials used by worker processes.
# Run as a unique, less privileged user for security reasons.
user app;

# Defines the number of worker processes.
# Should be > the number of CPU cores.
worker_processes auto;

# Defines a file that will store the process ID of the main process.
pid /var/run/nginx.pid;

# Number of file descriptors used for nginx the limit for the maximum FDs on the server is usually set by the OS.
# Maximum number of open files per worker process.
# Should be > worker_connections.
worker_rlimit_nofile 65535;

# Free some CPU cycles.
timer_resolution 500ms;

events {
    # Essential for linux, optmized to serve many clients with each thread.
    use epoll;

    # Determines how many clients will be served by each worker process.
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    # Should be < worker_rlimit_nofile.
    worker_connections 51200;

    # Let each process accept multiple connections.
    multi_accept on;
}

http {

    #### Simple DDoS Defense / LIMITS

    # Limiting the Number of Connections.
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:100m;
    limit_conn_zone $server_name zone=conn_limit_per_server:100m;

    # Zone - Defines the shared memory zone used to store the state of each IP address and how often it has accessed a requestâ€‘limited URL.
    #        Keeping the information in shared memory means it can be shared among the NGINX worker processes.
    #        The definition has two parts: the zone name identified by the zone= keyword, and the size following the colon.
    #        State information for about 16,000 IP addresses takes 1 megabyte, so our zone can store about 160,000 addresses.
    # Rate - Sets the maximum request rate. The rate cannot exceed 3000r requests per second.
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:100m rate=3000r/s;

    map $http_x_forwarded_proto $is_https {
        default $https;
        https on;
    }

    # Block all HTTP:80
    server {
        listen 80 default_server;

        listen 443 ssl http2 default_server;

        include snippets/ssl-certificates.conf;

        server_name _;

        deny all;
    }

    server {
        listen 80;

        listen 443 ssl http2;

        server_name # www to non-www w/ regex in a dedicated single server for all sites
                    # www.domain.xyz => domain.xyz
                    ~^www\.(?<domain>.+)$
                    # Generically remove the www of the domain
                    ~^(?!www\.)(?<domain>.+)$;

        server_name_in_redirect off;
        port_in_redirect off;
        log_not_found off;

        include snippets/ssl-certificates.conf;

        return 301 https://$domain$request_uri;
    }

    # Define the MIME types for files.
    include mime.types;

    # Defines the default MIME type of a response.
    default_type application/octet-stream;

    include nginx.d/*.conf;
    include addon.d/*.conf;

    include servers/*.conf;
}
