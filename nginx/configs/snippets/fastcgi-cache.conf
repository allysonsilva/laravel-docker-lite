fastcgi_cache $cache_zone;

# Only cache 200 responses, cache for 60 minutes
fastcgi_cache_valid 200 60m;

# Only GET and HEAD methods apply
fastcgi_cache_methods GET;

# Nginx can deliver stale content from its cache when it canâ€™t get updated content from the upstream PHP-FPM server.
# For example, when MySQL/MariaDB database server is down.
# Rather than relay the error to clients.
# Nginx can deliver the stale version of the file from its cache.
fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;

# Sets the number of times an item must be requested by clients before Nginx caches it.
fastcgi_cache_min_uses 1;

# With fastcgi_cache_lock enabled, if multiple clients request a file that is not current in the cache, only the first of those requests is allowed through to the upstream PHP-FPM server.
# The remaining requests wait for that request to be satisified and then pull the file form the cache.
# Without fastcgi_cache_lock enabled, all requests go straight to the upstream PHP-FPM server.
fastcgi_cache_lock on;

fastcgi_cache_bypass $skip_cache $http_cache_control;
fastcgi_no_cache $skip_cache $http_cache_control;
